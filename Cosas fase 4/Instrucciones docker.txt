PASOS PARA HACER EL DOCKER

1: Crear un archivo docker que contenga esto:


----------------------------------------------------------------------- WEB JAVA -------------------------------------

Estando nosotros donde estan nuestros jar

FROM openjdk:8-jre
COPY URJCGamingNews-0.0.1-SNAPSHOT.jar /usr/app/
WORKDIR /usr/app
CMD [ "java", "-jar", "URJCGamingNews-0.0.1-SNAPSHOT.jar" ]


172.17.0.2
SPRING_DATASOURCE_URL
spring.datasource.url=jdbc:mysql://localhost:3306/local?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.url=jdbc:mysql://172.17.0.2:3306/local?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC


Ejecutamos esto para buildear el fichero docker
sudo docker build -f java-webapp -t "simple_flask:dockerfile" /home/jpguirado
sudo docker build -f java-webapp -t "web1" /home/jpguirado
sudo docker build -f java-webapp-dockerfile -t "web1" /home/jpguirado

El simple

sudo docker run -p 8443:8443 web1 --SPRING_DATASOURCE_URL==jdbc:mysql://172.17.0.2:3306/local?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC 

-------------------------------------------------------------------- SERV INTERNO --------------------------------------------

FROM openjdk:8-jre
COPY ServicioInternoMaven-0.0.1-SNAPSHOT.jar /usr/app/
WORKDIR /usr/app
CMD [ "java", "-jar", "ServicioInternoMaven-0.0.1-SNAPSHOT.jar" ]

sudo docker build -f java-servinter-dockerfile -t "serviciointerno" /home/jpguirado
sudo docker run -p 7777:7777 serviciointerno

Configurar la mysql:
https://hub.docker.com/r/mysql/mysql-server




Borra todos los contenedores
sudo docker rm -f $(sudo docker ps -a -q)
sudo docker system prune

sudo docker pull mysql/mysql-server
sudo docker run --name=mysql1 -d -p 3306:3306 mysql/mysql-server
sudo docker run --name=mysql1 -d mysql/mysql-server

Esto te generara la contraseña de root del mysql
sudo docker logs mysql1 2>&1 | grep GENERATED 
Con esto accedes
sudo docker exec -it mysql1 mysql -uroot -p



    create database local; (Creamos la base de datos con nombre local, tal cual está en el Apliccation.properties de nuestro proyecto)

    create user 'root'@'%' identified by 'root'; (Creamos el usuario root con contraseña root

    grant all on local.* to 'root'@'%'; (Damos acceso total a nuestra base de datos "local" al usuario root)

    ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root'; (Comando necesario para su correcto funcionamiento)


Para arrancar un contenedor existente



Acceder a un puerto de un contenedor:

docker inspect (te da la ipadress)
jdbc:mysql//bd:3306/...

vim i para inertar luego escape y :wq



------------------------------------------------ BALANCEADOR ---------------------------------------
https://hub.docker.com/_/haproxy

sudo docker build -f balanceador-dockerfile -t balanceador /home/jpguirado
sudo docker run -p 1936:1936 -p 8080:8080 --name=balanceador --network=urjcgaming balanceador



--------------------------------------------------- RED DOCKER ------------------------------------
Creala con

 sudo docker network create cookingWithJava-Network

Y Al hacer run pon
--network=cookingWithJava-Network





------------------------------------------------------- INSTRUCCIONES FINALES FASE 4 ----------------------------------
1º Crear red docker
sudo docker network create urjcgaming



2º BASE DE DATOS --------------------------------------
sudo docker pull mysql/mysql-server
sudo docker run --name=mysql1 --network=urjcgaming -d mysql/mysql-server
Esto te generara la contraseña de root del mysql
sudo docker logs mysql1 2>&1 | grep GENERATED 
Con esto accedes
sudo docker exec -it mysql1 mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root'; (Comando necesario para su correcto funcionamiento)
create database local; (Creamos la base de datos con nombre local, tal cual está en el Apliccation.properties de nuestro proyecto)
create user 'root'@'%' identified by 'root'; (Creamos el usuario root con contraseña root
grant all on local.* to 'root'@'%'; (Damos acceso total a nuestra base de datos "local" al usuario root)

3º SERVICIO INTERNO --------------------------------
sudo docker build -f java-webapp-dockerfile -t "web1" /home/jpguirado
sudo docker run -p 7777:7777 --name=serviciointerno --network=urjcgaming serviciointerno
4º PAGINA WEB ---------------------------------------------
sudo docker build -f java-webapp-dockerfile -t "web" /home/jpguirado
sudo docker run -p 9000:8080 --name=web1 --network=urjcgaming web
sudo docker run -p 9001:8080 --name=web2 --network=urjcgaming web
5º HAPROXY -----------------------------------------------------
sudo nano haproxy.cfg
sudo docker build -f balanceador-dockerfile -t balanceador /home/jpguirado
sudo docker run -p 1936:1936 -p 8080:8080 --name=balanceador --network=urjcgaming balanceador
6º REENVIO DE PUERTOS ------------------------------------------
Mapear los puertos 1936 1337 8080 y 8443